üìå –£–º–æ–≤–∏ —Ä–æ–±–æ—Ç–∏:
–£ HTML –∫–æ–∂–Ω–æ–≥–æ —Å–ª–∞–π–¥–µ—Ä–∞ –º–∞—î –±—É—Ç–∏ —Å–≤—ñ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä .swiper-pagination —ñ (–æ–ø—Ü—ñ–π–Ω–æ) .swiper-pagination-fraction –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ —Å–ª–∞–π–¥–µ—Ä–∞.

–í pagination.el —Ç–∞ renderBullet –ø–µ—Ä–µ–¥–∞—î—à –∫–ª–∞—Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–ª–∞–π–¥–µ—Ä–∞ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥ .products-slider .swiper-pagination).
üîÅ –¶—è —Ñ—É–Ω–∫—Ü—ñ—è —Ç–µ–ø–µ—Ä –ø–æ–≤–Ω—ñ—Å—Ç—é —ñ–∑–æ–ª—å–æ–≤–∞–Ω–∞ —Ç–∞ –ø—ñ–¥—Ç—Ä–∏–º—É—î –º–Ω–æ–∂–∏–Ω–Ω—ñ —Å–ª–∞–π–¥–µ—Ä–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ. –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ, –º–æ–∂—É –ø–æ–∫–∞–∑–∞—Ç–∏ –ø—Ä–∏–∫–ª–∞–¥ –∑ 2 —Å–ª–∞–π–¥–µ—Ä–∞–º–∏.

–û—Å—å –ø—Ä–∏–∫–ª–∞–¥, —è–∫ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –¥–≤–∞ –Ω–µ–∑–∞–ª–µ–∂–Ω—ñ Swiper-—Å–ª–∞–π–¥–µ—Ä–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ, –∫–æ–∂–µ–Ω –∑ –≤–ª–∞—Å–Ω–∏–º:

–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º,

—Ñ—Ä–∞–∫—Ü—ñ–π–Ω–æ—é –ø–∞–≥—ñ–Ω–∞—Ü—ñ—î—é,

–±—É–ª—ñ—Ç–∞–º–∏ —Ç–∞ –º–∞—Ä–∫–µ—Ä–æ–º.


 –í–∞–∂–ª–∏–≤–æ
–£ .swiper-pagination, .swiper-pagination-fraction, .swiper ‚Äî –∫–ª–∞—Å–∏ –º–∞—é—Ç—å –±—É—Ç–∏ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Å–ª–∞–π–¥–µ—Ä–∞ –∞–±–æ –æ–±–≥–æ—Ä–Ω—É—Ç—ñ —É wrapper.

–ù–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –æ–¥–∏–Ω —ñ —Ç–æ–π —Å–∞–º–∏–π –∫–ª–∞—Å .swiper-pagination –¥–ª—è –∫—ñ–ª—å–∫–æ—Ö —Å–ª–∞–π–¥–µ—Ä—ñ–≤ –±–µ–∑ —É—Ç–æ—á–Ω–µ–Ω–Ω—è —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ (.products-slider-wrapper .swiper-pagination —Ç–æ—â–æ).






<div class="slider-wrapper products-slider-wrapper">
	<div class="swiper products-slider">
		<div class="swiper-wrapper">
			<div class="swiper-slide">Slide 1</div>
			<div class="swiper-slide">Slide 2</div>
			<div class="swiper-slide">Slide 3</div>
			<div class="swiper-slide">Slide 4</div>
			<div class="swiper-slide">Slide 5</div>
		</div>
		<div class="swiper-pagination"></div>
		<div class="swiper-pagination-fraction"></div>
	</div>
</div>

<div class="slider-wrapper grand-slider-wrapper">
	<div class="swiper grand-slider">
		<div class="swiper-wrapper">
			<div class="swiper-slide">Slide A</div>
			<div class="swiper-slide">Slide B</div>
			<div class="swiper-slide">Slide C</div>
			<div class="swiper-slide">Slide D</div>
			<div class="swiper-slide">Slide E</div>
			<div class="swiper-slide">Slide F</div>
		</div>
		<div class="swiper-pagination"></div>
		<div class="swiper-pagination-fraction"></div>
	</div>
</div>















//css
.swiper-pagination-marker {
	position: absolute;
	height: var(--bullet-size);
	background: #000;
	border-radius: var(--marker-radius-circle);
	transition: all 0.5s ease;
	left: 0;
	top: 0;
	pointer-events: none;
}

.swiper-pagination-bullet {
	position: relative;
	width: var(--bullet-size, 10px);
	height: var(--bullet-size, 10px);
	background-color: #ccc;
	display: inline-block;
	margin: 0 4px;
	border-radius: 50%;
	cursor: pointer;
}

























// —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è

function init_float_pagination() {
	const swiperInstance = this;
	const container = swiperInstance.el.closest('.swiper');
	if (!container) return;

	// ==== –ü–ê–ì–Ü–ù–ê–¶–Ü–Ø ====
	const paginationEl = container.querySelector('.swiper-pagination');
	if (!paginationEl) return;

	// –î–æ–¥–∞—î–º–æ –º–∞—Ä–∫–µ—Ä, —è–∫—â–æ —â–µ –Ω–µ –¥–æ–¥–∞–Ω–∏–π
	if (!paginationEl.querySelector('.swiper-pagination-marker')) {
		const marker = document.createElement('span');
		marker.classList.add('swiper-pagination-marker');
		paginationEl.appendChild(marker);
	}

	const styles = getComputedStyle(paginationEl);
	const bulletSize = parseFloat(styles.getPropertyValue('--bullet-size'));
	const markerRadiusCircle = styles.getPropertyValue('--marker-radius-circle').trim();
	const markerRadiusOval = styles.getPropertyValue('--marker-radius-oval').trim();

	let lastLeft = 0;

	swiperInstance._moveMarker = (index) => {
		const bullets = paginationEl.querySelectorAll('.swiper-pagination-bullet');
		const marker = paginationEl.querySelector('.swiper-pagination-marker');
		if (!bullets[index] || !marker) return;

		const target = bullets[index];
		const currentLeft = target.offsetLeft;
		const bulletWidth = target.offsetWidth;
		const distance = Math.abs(currentLeft - lastLeft);

		marker.style.setProperty('--marker-width', `${distance + bulletWidth}px`);
		marker.style.setProperty('--marker-left', `${Math.min(lastLeft, currentLeft)}px`);
		marker.style.setProperty('--marker-radius', markerRadiusOval);

		setTimeout(() => {
			marker.style.setProperty('--marker-width', `${bulletWidth}px`);
			marker.style.setProperty('--marker-left', `${currentLeft}px`);
			marker.style.setProperty('--marker-radius', markerRadiusCircle);
			lastLeft = currentLeft;
		}, 500);
	};

	// ==== –§–†–ê–ö–¶–Ü–ô–ù–ê –ü–ê–ì–Ü–ù–ê–¶–Ü–Ø ====
	const fraction = container.querySelector('.swiper-pagination-fraction');
	let currentEl, totalEl;

	if (fraction) {
		fraction.innerHTML = `
			<span class="current">1</span>
			<span class="divider">/</span>
			<span class="total">1</span>
		`;
		currentEl = fraction.querySelector('.current');
		totalEl = fraction.querySelector('.total');
	}

	const updateFraction = () => {
		if (currentEl && totalEl) {
			const currentIndex = swiperInstance.realIndex + 1;
			const totalSlides = swiperInstance.wrapperEl.querySelectorAll('.swiper-slide:not(.swiper-slide-duplicate)').length;
			currentEl.textContent = currentIndex;
			totalEl.textContent = totalSlides;
		}
	};

	swiperInstance._moveMarker(swiperInstance.realIndex);
	updateFraction();
	swiperInstance.on('slideChange', () => {
		swiperInstance._moveMarker(swiperInstance.realIndex);
		updateFraction();
	});

// –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –±—É–ª—ñ—Ç—ñ–≤
function renderBullets() {
	return (index, className) => `<span class="${className}"></span>`;
}

// –ü–æ–¥—ñ—è –∑–º—ñ–Ω–∏ —Å–ª–∞–π–¥—É
function slide_change() {
	if (typeof this._moveMarker === 'function') {
		this._moveMarker(this.realIndex);
	}
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–æ–∂–Ω–æ–≥–æ —Å–ª–∞–π–¥–µ—Ä–∞ –æ–∫—Ä–µ–º–æ
if (document.querySelector('.products-slider')) {
	new Swiper('.products-slider', {
		modules: [Navigation, Pagination, Autoplay],
		loop: true,
		slidesPerView: 1,
		spaceBetween: 30,
		speed: 1500,

		pagination: {
			el: '.products-slider-wrapper .swiper-pagination',
			clickable: true,
			renderBullet: renderBullets(),
		},
		on: {
			init: init_float_pagination,
			slideChange: slide_change,
		},
	});
}

if (document.querySelector('.grand-slider')) {
	new Swiper('.grand-slider', {
		modules: [Navigation, Pagination, Autoplay],
		loop: true,
		slidesPerView: 1,
		spaceBetween: 30,
		speed: 1500,

		pagination: {
			el: '.grand-slider-wrapper .swiper-pagination',
			clickable: true,
			renderBullet: renderBullets(),
		},
		on: {
			init: init_float_pagination,
			slideChange: slide_change,
		},
	});
}





}