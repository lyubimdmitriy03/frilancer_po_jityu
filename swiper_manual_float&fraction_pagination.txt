
# –ü–æ–≤–Ω–∏–π –º–∞–Ω—É–∞–ª –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è Swiper –∑ —Ñ—Ä–∞–∫—Ü—ñ–π–Ω–æ—é –ø–∞–≥—ñ–Ω–∞—Ü—ñ—î—é —Ç–∞ –º–∞—Ä–∫–µ—Ä–æ–º (–±–∞–≥–∞—Ç–æ—Ä–∞–∑–æ–≤–æ)

## üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ HTML
–ö–æ–∂–µ–Ω —Å–ª–∞–π–¥–µ—Ä –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ —ñ–∑–æ–ª—å–æ–≤–∞–Ω–∏–π —É –≤–ª–∞—Å–Ω–æ–º—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ. –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ –¥–æ–¥–∞–≤–∞—Ç–∏:
- `.swiper-wrapper` ‚Äî –æ–±–≥–æ—Ä—Ç–∫–∞ –¥–ª—è `.swiper-slide`
- `.swiper-slide` ‚Äî –∫–æ–∂–µ–Ω —Å–ª–∞–π–¥
- `.swiper-pagination` ‚Äî –¥–ª—è bullet-–ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó –∑ –º–∞—Ä–∫–µ—Ä–æ–º
- `.swiper-pagination-fraction` ‚Äî –¥–ª—è —Ñ—Ä–∞–∫—Ü—ñ–π–Ω–æ—ó –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó

### –ü—Ä–∏–∫–ª–∞–¥:
```html
<div class="swiper my-slider">
  <div class="swiper-wrapper">
    <div class="swiper-slide">–°–ª–∞–π–¥ 1</div>
    <div class="swiper-slide">–°–ª–∞–π–¥ 2</div>
    <div class="swiper-slide">–°–ª–∞–π–¥ 3</div>
    <div class="swiper-slide">–°–ª–∞–π–¥ 4</div>
    <div class="swiper-slide">–°–ª–∞–π–¥ 5</div>
    <div class="swiper-slide">–°–ª–∞–π–¥ 6</div>
  </div>
  <div class="swiper-pagination"></div>
  <div class="swiper-pagination-fraction"></div>
</div>
```

---

## üé® SCSS / CSS —Å—Ç–∏–ª—ñ
```css
.swiper-pagination {
  --marker-left: 0px;
  --marker-width: 6px;
  --marker-radius: 50%;
  --bullet-size: 6px;
  --bullet-gap: 0;
  --marker-radius-circle: 50%;
  --marker-radius-oval: 6px;

  display: flex;
  justify-content: center;
  gap: 12px;
  position: relative;
  margin-top: 20px;
}

.swiper-pagination .swiper-pagination-bullet {
  width: var(--bullet-size);
  height: var(--bullet-size);
  margin: 0 var(--bullet-gap);
  border-radius: var(--marker-radius-circle);
  background-color: rgba(255, 255, 255, 0.2);
  transition: background 0.5s ease;
  position: relative;
  z-index: 1;
  cursor: pointer;
}

.swiper-pagination-marker {
  will-change: transform, width, border-radius;
  position: absolute;
  top: 0;
  left: var(--marker-left);
  height: var(--bullet-size);
  width: var(--marker-width);
  border-radius: var(--marker-radius);
  background-color: #fff;
  z-index: 2;
  pointer-events: none;
  transition:
    left 0.5s ease,
    width 0.5s ease,
    border-radius 0.5s ease;
}
```

---

## ‚öôÔ∏è JavaScript

### –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∞ bullets
```js
function renderBullets() {
  return (index, className) => `<span class="${className}"></span>`;
}
```

---

### –§—É–Ω–∫—Ü—ñ—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –∫–∞—Å—Ç–æ–º–Ω–æ—ó –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó
```js
function init_float_pagination() {
  const swiperInstance = this;
  const container = swiperInstance.el.closest('.swiper');
  if (!container) return;

  const paginationEl = container.querySelector('.swiper-pagination');
  if (!paginationEl) return;

  const marker = document.createElement('span');
  marker.classList.add('swiper-pagination-marker');
  paginationEl.appendChild(marker);

  const styles = getComputedStyle(paginationEl);
  const bulletSize = parseFloat(styles.getPropertyValue('--bullet-size'));
  const markerRadiusCircle = styles.getPropertyValue('--marker-radius-circle').trim();
  const markerRadiusOval = styles.getPropertyValue('--marker-radius-oval').trim();

  let lastLeft = 0;

  swiperInstance._moveMarker = (index) => {
    const bullets = paginationEl.querySelectorAll('.swiper-pagination-bullet');
    const marker = paginationEl.querySelector('.swiper-pagination-marker');
    if (!bullets[index] || !marker) return;

    const target = bullets[index];
    const currentLeft = target.offsetLeft;
    const bulletWidth = target.offsetWidth;
    const distance = Math.abs(currentLeft - lastLeft);

    marker.style.setProperty('--marker-width', `${distance + bulletWidth}px`);
    marker.style.setProperty('--marker-left', `${Math.min(lastLeft, currentLeft)}px`);
    marker.style.setProperty('--marker-radius', markerRadiusOval);

    setTimeout(() => {
      marker.style.setProperty('--marker-width', `${bulletWidth}px`);
      marker.style.setProperty('--marker-left', `${currentLeft}px`);
      marker.style.setProperty('--marker-radius', markerRadiusCircle);
      lastLeft = currentLeft;
    }, 500);
  };

  // ==== –§–†–ê–ö–¶–Ü–Ø ====
  const fraction = container.querySelector('.swiper-pagination-fraction');
  let currentEl, totalEl;

  if (fraction) {
    fraction.innerHTML = `
      <span class="current">1</span>
      <span class="divider">/</span>
      <span class="total">1</span>
    `;
    currentEl = fraction.querySelector('.current');
    totalEl = fraction.querySelector('.total');
  }

  const updateFraction = () => {
    if (currentEl && totalEl) {
      const currentIndex = swiperInstance.realIndex + 1;
      const totalSlides = swiperInstance.slides.length - (swiperInstance.loopedSlides * 2 || 0);
      currentEl.textContent = currentIndex;
      totalEl.textContent = totalSlides;
    }
  };

  swiperInstance._moveMarker(swiperInstance.realIndex);
  updateFraction();
  swiperInstance.on('slideChange', updateFraction);
}
```

---

### –§—É–Ω–∫—Ü—ñ—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –º–∞—Ä–∫–µ—Ä–∞ –ø—Ä–∏ –∑–º—ñ–Ω—ñ —Å–ª–∞–π–¥–∞
```js
function slide_change() {
  if (typeof this._moveMarker === 'function') {
    this._moveMarker(this.realIndex);
  }
}
```

---

## üîÑ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–ª–∞–π–¥–µ—Ä—ñ–≤

```js
const sliders = document.querySelectorAll('.swiper');

sliders.forEach((slider) => {
  new Swiper(slider, {
    modules: [Navigation, Pagination],
    loop: true,
    slidesPerView: 1,
    spaceBetween: 20,
    pagination: {
      el: slider.querySelector('.swiper-pagination'),
      clickable: true,
      renderBullet: renderBullets(),
    },
    on: {
      init: init_float_pagination,
      slideChange: slide_change,
    },
  });
});
```

---

‚úÖ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ **–¥–µ–∫—ñ–ª—å–∫–∞ —Å–ª–∞–π–¥–µ—Ä—ñ–≤** –∑ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–º–∏(—Ç–æ–±—Ç–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç–∏ —Å–≤—ñ–π —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π –∫–ª–∞—Å) `.swiper-pagination` —Ç–∞ `.swiper-pagination-fraction` –±–µ–∑ –∫–æ–Ω—Ñ–ª—ñ–∫—Ç—ñ–≤.
